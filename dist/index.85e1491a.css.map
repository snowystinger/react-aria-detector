{"mappings":"AEkDyB,WAAA,mFAAA,0BAAA,mBAAA,sBAAA,qBAAA,qBAAA,mBAAA,sBAAA,qDAAA,mDAAA,yCAAA,uCAAA,uCAAA,qCAAA,uBAAA,0BAAA,yBAAA,yBAAA,uBAiJQ,wBAAA,wBAAA,4BAAA,wBC1JG,yDCmBrB,wBAAA,yBAAA,oFAAA,uBAAA,uBAAA,uBAAA,4BAAA,kBAAA,0BAAA,sBAAA,yBAAA,qFAAA,uBAAA,wBAAA,sBAAA,oBAAA,wBAAA,mFAAA,qBAAA,sEAAA,4EAAA,4EAAA,yEAAA,eAAA,yBAAA,yBAAA,yBAAA,eAAA,yBAAA,yBAAA,yBAAA,gDAAA,8BAAA,gEAAA,8DAAA,8DAAA,4DAAA,4BAAA,sBAAA,0BAAA,mDAAA,iDAAA,kBAAA,qBAAA,kMAAA,oCAAA,yDAAA,uBAAA,oCAAA,uCAAA,gCAAA,kCAAA,8BAAA,gCAAA,4FAAA,4CAAA,mFAAA,mFAAA,gFAAA,mFAAA,gCAAA,gCAAA,gCAAA,+BAAA,gCAAA,gCAAA,gCAAA,gCAAA,uFAAA,uFAAA,uFAAA,4FAAA,4FAAA,4FAAA,4FAAA,uFAAA,oCAAA,oCAAA,mCAAA,mCAAA,oCAAA,oCAAA,oCAAA,2BAAA,oCAAA,wCAAA,8BAAA,8CAAA,uBAAA,0BAAA,yBAAA,yBAAA,uBAAA,sBAAA,sBAAA,sBAAA,sBAkRkB,2CAAA,8CAAA,kBAEyB,kBACtC,2BAAA,4BAAA,gDCpRA,yBAAA,sBAAA,kBAAA,mBAAA,qBAAA,sBAAA,wBAAA,2BAAA,uBAAA,qBAAA,wBAAA,2BAAA,yBAAA,4BAoGK,wBH/GA,WEUV,4DAAA,kFAAA,6FAAA,uDAAA,0DAAA,yDAAA,yDAAA,uDAAA,+DAAA,6DAAA,wDAAA,oEFVU,WAAA,mFAAA,WAAA,0MAAA,WAAA,iHAAA,WAAA,uHAAA,WAAA,sKAAA,WAAA,4JAAA,wBAAA,aAAA,8BEUV,kCAAA,2BAAA,8BAAA,2BAAA,yBAAA,oCAAA,iCAAA,gCAAA,sCAAA,qCAAA,oCAAA,wCFVU,aAAA,8CAAA,sBAAA,yBAAA,wBAAA,wBAAA,uBAAA,0BAAA,6BAAA,4BAAA,4BAAA,2BEUV,0BAAA,0BAAA,yBAAA,yBAAA,0BAAA,yBAAA,0BAAA,6BAAA,4BAAA,4BAAA,6BAAA,aAAA,8CAAA,0DAAA,6DAAA,4DAAA,4DAAA,6DAyOkB,+BErSjC,gMAQA,mCACE,yDAMF,oGAMA,kGAMA,kHAIA","sources":["index.85e1491a.css","3d760190918a103f","node_modules/@react-spectrum/s2/dist/packages/@react-spectrum/s2/src/ActionButton.tsx","node_modules/@react-spectrum/s2/dist/packages/@react-spectrum/s2/src/CenterBaseline.tsx","node_modules/@react-spectrum/s2/dist/packages/@react-spectrum/s2/src/Button.tsx","node_modules/@react-spectrum/s2/dist/packages/@react-spectrum/s2/src/ButtonGroup.tsx","node_modules/@react-spectrum/s2/page.css"],"sourcesContent":["@layer _.a {\n  ._ec {\n    font-variation-settings: \"wght\" 500;\n    font-synthesis-weight: none;\n    font-weight: 500;\n  }\n\n  .k-375toq {\n    height: var(--k);\n  }\n\n  .qo {\n    min-width: 2rem;\n  }\n\n  .qi {\n    min-width: 1.25rem;\n  }\n\n  .qk {\n    min-width: 1.5rem;\n  }\n\n  .qp {\n    min-width: 2.5rem;\n  }\n\n  .qv {\n    min-width: 3rem;\n  }\n\n  .wf {\n    border-style: none;\n  }\n\n  .CH {\n    padding-inline-start: calc(var(--k, var(--o)) * 3 / 8);\n  }\n\n  .DH {\n    padding-inline-end: calc(var(--k, var(--o)) * 3 / 8);\n  }\n\n  ._vh {\n    border-start-start-radius: .571429em;\n  }\n\n  ._wh {\n    border-start-end-radius: .571429em;\n  }\n\n  ._xh {\n    border-end-start-radius: .571429em;\n  }\n\n  ._yh {\n    border-end-end-radius: .571429em;\n  }\n\n  .-_375toq_k-o {\n    --k: 2rem;\n  }\n\n  .-_375toq_k-i {\n    --k: 1.25rem;\n  }\n\n  .-_375toq_k-k {\n    --k: 1.5rem;\n  }\n\n  .-_375toq_k-p {\n    --k: 2.5rem;\n  }\n\n  .-_375toq_k-v {\n    --k: 3rem;\n  }\n\n  .__vb {\n    overflow-x: hidden;\n  }\n\n  .__wb {\n    overflow-y: hidden;\n  }\n\n  ._ma {\n    text-overflow: ellipsis;\n  }\n\n  ._pb {\n    white-space: nowrap;\n  }\n\n  .-_1b6ows1:before {\n    content: \"Â \";\n    visibility: hidden;\n    width: 0;\n  }\n\n  ._La {\n    outline-style: none;\n  }\n\n  ._Lb {\n    outline-style: solid;\n  }\n\n  .dx {\n    outline-color: var(--lightningcss-light, #4b75ff) var(--lightningcss-dark, #456efe);\n  }\n\n  .dc {\n    outline-color: #fff;\n  }\n\n  .db {\n    outline-color: #000;\n  }\n\n  ._Nc {\n    outline-width: 2px;\n  }\n\n  ._M-3t1z {\n    outline-offset: 2px;\n  }\n\n  ._Zd {\n    display: flex;\n  }\n\n  ._1d {\n    align-items: baseline;\n  }\n\n  ._ja {\n    text-align: start;\n  }\n\n  .jF {\n    column-gap: .428571em;\n  }\n\n  ._ca {\n    font-family: adobe-clean-variable, adobe-clean, ui-sans-serif, system-ui, sans-serif;\n  }\n\n  ._de {\n    font-size: .875rem;\n  }\n\n  ._da {\n    font-size: .6875rem;\n  }\n\n  ._dc {\n    font-size: .75rem;\n  }\n\n  ._dg {\n    font-size: 1rem;\n  }\n\n  ._di {\n    font-size: 1.125rem;\n  }\n\n  ._ed {\n    font-variation-settings: \"wght\" 700;\n    font-synthesis-weight: none;\n    font-weight: 700;\n  }\n\n  ._fa {\n    line-height: 1.3;\n  }\n\n  .ad {\n    color: var(--lightningcss-light, #fff) var(--lightningcss-dark, #111);\n  }\n\n  .an {\n    color: var(--lightningcss-light, #292929) var(--lightningcss-dark, #dbdbdb);\n  }\n\n  .ao {\n    color: var(--lightningcss-light, #131313) var(--lightningcss-dark, #f2f2f2);\n  }\n\n  .aj {\n    color: var(--lightningcss-light, #c6c6c6) var(--lightningcss-dark, #444);\n  }\n\n  .ab {\n    color: #000;\n  }\n\n  .a_____e {\n    color: #ffffffd9;\n  }\n\n  .a_____f {\n    color: #fffffff0;\n  }\n\n  .a_____a {\n    color: #ffffff36;\n  }\n\n  .ac {\n    color: #fff;\n  }\n\n  .a_____r {\n    color: #000000d6;\n  }\n\n  .a_____s {\n    color: #000000ed;\n  }\n\n  .a_____n {\n    color: #00000038;\n  }\n\n  .__Da {\n    -webkit-user-select: none;\n    user-select: none;\n  }\n\n  .o-375tou {\n    min-height: var(--o);\n  }\n\n  ._vg {\n    border-start-start-radius: calc(var(--k, var(--o, 9999px)) / 2);\n  }\n\n  ._wg {\n    border-start-end-radius: calc(var(--k, var(--o, 9999px)) / 2);\n  }\n\n  ._xg {\n    border-end-start-radius: calc(var(--k, var(--o, 9999px)) / 2);\n  }\n\n  ._yg {\n    border-end-end-radius: calc(var(--k, var(--o, 9999px)) / 2);\n  }\n\n  .__na {\n    box-sizing: border-box;\n  }\n\n  .l6 {\n    width: fit-content;\n  }\n\n  ._ld {\n    text-decoration: none;\n  }\n\n  .CI {\n    padding-inline-start: calc(var(--k, var(--o)) / 2);\n  }\n\n  .DI {\n    padding-inline-end: calc(var(--k, var(--o)) / 2);\n  }\n\n  .Ea {\n    padding-top: 0;\n  }\n\n  .Fa {\n    padding-bottom: 0;\n  }\n\n  ._Oa {\n    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;\n  }\n\n  ._Q-375x7f {\n    transition-duration: .15s;\n  }\n\n  ._Ra {\n    transition-timing-function: cubic-bezier(.45, 0, .4, 1);\n  }\n\n  .wa {\n    border-style: solid;\n  }\n\n  .u-375tp0 {\n    border-top-width: var(--u);\n  }\n\n  .v-375tp1 {\n    border-bottom-width: var(--v);\n  }\n\n  .sa {\n    border-inline-start-width: 0;\n  }\n\n  .sc {\n    border-inline-start-width: 2px;\n  }\n\n  .ta {\n    border-inline-end-width: 0;\n  }\n\n  .tc {\n    border-inline-end-width: 2px;\n  }\n\n  .-_1gogtue_E--1dbqcch {\n    --labelPadding: calc((var(--o)  - var(--u, 0px)  - var(--v, 0px)  - 1lh) / 2);\n  }\n\n  .-oelgqu_A--177861o {\n    --iconMargin: -.142857em;\n  }\n\n  .cn {\n    border-color: var(--lightningcss-light, #292929) var(--lightningcss-dark, #dbdbdb);\n  }\n\n  .co {\n    border-color: var(--lightningcss-light, #131313) var(--lightningcss-dark, #f2f2f2);\n  }\n\n  .cj {\n    border-color: var(--lightningcss-light, #c6c6c6) var(--lightningcss-dark, #444);\n  }\n\n  .ci {\n    border-color: var(--lightningcss-light, #dadada) var(--lightningcss-dark, #393939);\n  }\n\n  .c_____e {\n    border-color: #ffffffd9;\n  }\n\n  .c_____f {\n    border-color: #fffffff0;\n  }\n\n  .c_____a {\n    border-color: #ffffff36;\n  }\n\n  .c____9 {\n    border-color: #ffffff2b;\n  }\n\n  .c_____r {\n    border-color: #000000d6;\n  }\n\n  .c_____s {\n    border-color: #000000ed;\n  }\n\n  .c_____n {\n    border-color: #00000038;\n  }\n\n  .c_____m {\n    border-color: #00000026;\n  }\n\n  .bn {\n    background-color: var(--lightningcss-light, #292929) var(--lightningcss-dark, #dbdbdb);\n  }\n\n  .bo {\n    background-color: var(--lightningcss-light, #131313) var(--lightningcss-dark, #f2f2f2);\n  }\n\n  .bh {\n    background-color: var(--lightningcss-light, #e1e1e1) var(--lightningcss-dark, #323232);\n  }\n\n  .b_____E {\n    background-color: var(--lightningcss-light, #3b63fb) var(--lightningcss-dark, #345bf8);\n  }\n\n  .b_____F {\n    background-color: var(--lightningcss-light, #274dea) var(--lightningcss-dark, #2549e5);\n  }\n\n  .b_____I {\n    background-color: var(--lightningcss-light, #d73220) var(--lightningcss-dark, #cd2e1d);\n  }\n\n  .b_____J {\n    background-color: var(--lightningcss-light, #b72818) var(--lightningcss-dark, #b12617);\n  }\n\n  .bg {\n    background-color: var(--lightningcss-light, #e9e9e9) var(--lightningcss-dark, #2c2c2c);\n  }\n\n  .b_____e {\n    background-color: #ffffffd9;\n  }\n\n  .b_____f {\n    background-color: #fffffff0;\n  }\n\n  .b____8 {\n    background-color: #ffffff24;\n  }\n\n  .b____7 {\n    background-color: #ffffff1c;\n  }\n\n  .b_____r {\n    background-color: #000000d6;\n  }\n\n  .b_____s {\n    background-color: #000000ed;\n  }\n\n  .b_____l {\n    background-color: #0000001f;\n  }\n\n  .ba {\n    background-color: #0000;\n  }\n\n  .b_____k {\n    background-color: #00000017;\n  }\n\n  .-rwx0fg_e-b {\n    --iconPrimary: currentColor;\n  }\n\n  ._zb {\n    forced-color-adjust: none;\n  }\n\n  .__R-yksgrp {\n    -webkit-tap-highlight-color: #0000;\n  }\n\n  .-_375tou_o-o {\n    --o: 2rem;\n  }\n\n  .-_375tou_o-i {\n    --o: 1.25rem;\n  }\n\n  .-_375tou_o-k {\n    --o: 1.5rem;\n  }\n\n  .-_375tou_o-p {\n    --o: 2.5rem;\n  }\n\n  .-_375tou_o-v {\n    --o: 3rem;\n  }\n\n  .-_375tp0_u-a {\n    --u: 0px;\n  }\n\n  .-_375tp0_u-c {\n    --u: 2px;\n  }\n\n  .-_375tp1_v-a {\n    --v: 0px;\n  }\n\n  .-_375tp1_v-c {\n    --v: 2px;\n  }\n\n  .E-1gogtue {\n    padding-top: var(--labelPadding);\n  }\n\n  .F-1gogtue {\n    padding-bottom: var(--labelPadding);\n  }\n\n  .__A-3t1y {\n    order: 1;\n  }\n\n  .__A-3t1x {\n    order: 0;\n  }\n\n  .l-1sthc3k {\n    width: 1.42857em;\n  }\n\n  .k-1sthc3k {\n    height: 1.42857em;\n  }\n\n  .y-oelgqu {\n    margin-inline-start: var(--iconMargin);\n  }\n\n  ._Ze {\n    display: inline-flex;\n  }\n\n  .Uc {\n    position: relative;\n  }\n\n  .ic {\n    row-gap: .5rem;\n  }\n\n  .id {\n    row-gap: .75rem;\n  }\n\n  .jc {\n    column-gap: .5rem;\n  }\n\n  .jd {\n    column-gap: .75rem;\n  }\n\n  ._6a {\n    flex-direction: row;\n  }\n\n  ._6b {\n    flex-direction: column;\n  }\n\n  ._1a {\n    align-items: start;\n  }\n\n  ._1b {\n    align-items: end;\n  }\n\n  ._1c {\n    align-items: center;\n  }\n\n  ._2b {\n    justify-content: start;\n  }\n\n  ._2c {\n    justify-content: end;\n  }\n\n  ._2d {\n    justify-content: center;\n  }\n\n  ._8-3t1x {\n    flex-shrink: 0;\n  }\n}\n\n@layer _.b {\n  ._1-1dz4pg9c:has([slot=\"icon\"]:only-child) {\n    align-items: center;\n  }\n\n  ._c-enzrfpb:lang(ar) {\n    font-family: myriad-arabic, ui-sans-serif, system-ui, sans-serif;\n  }\n\n  ._f-1x99dlob:is(:lang(ja), :lang(ko), :lang(zh), :lang(zh-Hant), :lang(zh-Hans)) {\n    line-height: 1.5;\n  }\n\n  .q-1dz4pg9o:has([slot=\"icon\"]:only-child) {\n    min-width: 2rem;\n  }\n\n  .q-1dz4pg9i:has([slot=\"icon\"]:only-child) {\n    min-width: 1.25rem;\n  }\n\n  .q-1dz4pg9k:has([slot=\"icon\"]:only-child) {\n    min-width: 1.5rem;\n  }\n\n  .q-1dz4pg9p:has([slot=\"icon\"]:only-child) {\n    min-width: 2.5rem;\n  }\n\n  .q-1dz4pg9v:has([slot=\"icon\"]:only-child) {\n    min-width: 3rem;\n  }\n\n  .C-1dz4pg9a:has([slot=\"icon\"]:only-child) {\n    padding-inline-start: 0;\n  }\n\n  .D-1dz4pg9a:has([slot=\"icon\"]:only-child) {\n    padding-inline-end: 0;\n  }\n\n  ._b-1dz4pg9b:has([slot=\"icon\"]:only-child) {\n    aspect-ratio: 1;\n  }\n\n  .-oelgqu_A--1dz4pg9a:has([slot=\"icon\"]:only-child) {\n    --iconMargin: 0rem;\n  }\n}\n\n@layer _.c {\n  ._c-enzwzjc:lang(he) {\n    font-family: myriad-hebrew, ui-sans-serif, system-ui, sans-serif;\n  }\n}\n\n@layer _.d {\n  ._c-enzykdd:lang(ja) {\n    font-family: adobe-clean-han-japanese, Hiragino Kaku Gothic ProN, ãã©ã®ãè§ã´ ProN W3, Osaka, YuGothic, Yu Gothic, ã¡ã¤ãªãª, Meiryo, ï¼­ï¼³ ï¼°ã´ã·ãã¯, MS PGothic, sans-serif;\n  }\n}\n\n@layer _.e {\n  ._c-enzzrge:lang(ko) {\n    font-family: adobe-clean-han-korean, source-han-korean, Malgun Gothic, Apple Gothic, sans-serif;\n  }\n}\n\n@layer _.f {\n  ._c-eo0c6sf:lang(zh) {\n    font-family: adobe-clean-han-traditional, source-han-traditional, MingLiu, Heiti TC Light, sans-serif;\n  }\n}\n\n@layer _.g {\n  ._c-1uotwbwg:lang(zh-hant) {\n    font-family: adobe-clean-han-traditional, source-han-traditional, MingLiu, Microsoft JhengHei UI, Microsoft JhengHei, Heiti TC Light, sans-serif;\n  }\n}\n\n@layer _.h {\n  ._c-bc1l9oh:is(:lang(zh-Hans), :lang(zh-CN), :lang(zh-SG)) {\n    font-family: adobe-clean-han-simplified-c, source-han-simplified-c, SimSun, Heiti SC Light, sans-serif;\n  }\n}\n\n@layer UNSAFE_overrides;\n\n@layer _.b.a {\n  @media (forced-colors: active) {\n    .da_____z {\n      outline-color: highlight;\n    }\n\n    .aa_____w {\n      color: buttonface;\n    }\n\n    .aa_____A {\n      color: highlighttext;\n    }\n\n    .aa_____x {\n      color: buttontext;\n    }\n\n    .aa_____B {\n      color: graytext;\n    }\n\n    .ca_____v {\n      border-color: buttonborder;\n    }\n\n    .ca_____z {\n      border-color: highlight;\n    }\n\n    .ca_____B {\n      border-color: graytext;\n    }\n\n    .ba_____x {\n      background-color: buttontext;\n    }\n\n    .ba_____z {\n      background-color: highlight;\n    }\n\n    .ba_____B {\n      background-color: graytext;\n    }\n\n    .ba_____w {\n      background-color: buttonface;\n    }\n  }\n}\n\n@layer _.b.b {\n  @media not ((hover: hover) and (pointer: fine)) {\n    .qbp {\n      min-width: 2.5rem;\n    }\n\n    .qbj {\n      min-width: 1.5625rem;\n    }\n\n    .qbl {\n      min-width: 1.875rem;\n    }\n\n    .qbs {\n      min-width: 3.125rem;\n    }\n\n    .qbw {\n      min-width: 3.75rem;\n    }\n\n    .-_375toq_k-bp {\n      --k: 2.5rem;\n    }\n\n    .-_375toq_k-bj {\n      --k: 1.5625rem;\n    }\n\n    .-_375toq_k-bl {\n      --k: 1.875rem;\n    }\n\n    .-_375toq_k-bs {\n      --k: 3.125rem;\n    }\n\n    .-_375toq_k-bw {\n      --k: 3.75rem;\n    }\n\n    .jbG {\n      column-gap: .470588em;\n    }\n\n    ._dbf {\n      font-size: 1.0625rem;\n    }\n\n    ._dbb {\n      font-size: .8125rem;\n    }\n\n    ._dbd {\n      font-size: .9375rem;\n    }\n\n    ._dbh {\n      font-size: 1.1875rem;\n    }\n\n    ._dbj {\n      font-size: 1.375rem;\n    }\n\n    .-_375tou_o-bp {\n      --o: 2.5rem;\n    }\n\n    .-_375tou_o-bj {\n      --o: 1.5625rem;\n    }\n\n    .-_375tou_o-bl {\n      --o: 1.875rem;\n    }\n\n    .-_375tou_o-bs {\n      --o: 3.125rem;\n    }\n\n    .-_375tou_o-bw {\n      --o: 3.75rem;\n    }\n  }\n}\n\n@layer _.c.b {\n  @media not ((hover: hover) and (pointer: fine)) {\n    .q-1dz4pg9bp:has([slot=\"icon\"]:only-child) {\n      min-width: 2.5rem;\n    }\n\n    .q-1dz4pg9bj:has([slot=\"icon\"]:only-child) {\n      min-width: 1.5625rem;\n    }\n\n    .q-1dz4pg9bl:has([slot=\"icon\"]:only-child) {\n      min-width: 1.875rem;\n    }\n\n    .q-1dz4pg9bs:has([slot=\"icon\"]:only-child) {\n      min-width: 3.125rem;\n    }\n\n    .q-1dz4pg9bw:has([slot=\"icon\"]:only-child) {\n      min-width: 3.75rem;\n    }\n  }\n}\n\n.\\.:not(#a#b) {\n  all: revert-layer;\n}\n\nhtml {\n  --lightningcss-light: initial;\n  --lightningcss-dark: ;\n  color-scheme: light dark;\n  --s2-container-bg: var(--lightningcss-light, #fff) var(--lightningcss-dark, #111);\n  background: var(--s2-container-bg);\n}\n\n@media (prefers-color-scheme: dark) {\n  html {\n    --lightningcss-light: ;\n    --lightningcss-dark: initial;\n  }\n}\n\nhtml[data-color-scheme=\"light\"] {\n  --lightningcss-light: initial;\n  --lightningcss-dark: ;\n  color-scheme: light;\n}\n\nhtml[data-color-scheme=\"dark\"] {\n  --lightningcss-light: ;\n  --lightningcss-dark: initial;\n  color-scheme: dark;\n}\n\nhtml[data-background=\"layer-1\"] {\n  --s2-container-bg: var(--lightningcss-light, #f8f8f8) var(--lightningcss-dark, #1b1b1b);\n}\n\nhtml[data-background=\"layer-2\"] {\n  --s2-container-bg: var(--lightningcss-light, #fff) var(--lightningcss-dark, #222);\n}\n/*# sourceMappingURL=index.85e1491a.css.map */\n","@import \"30e5c9337c601036\";\n@import \"a440485ec3a0d2ed\";\n@import \"d638bc1a42006308\";\n@import \"2397e71d2e516d5d\";\n@import \"405252bce65cadf5\";\n","/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {baseColor, fontRelative, style} from '../style/spectrum-theme' with { type: 'macro' };\nimport {ButtonProps, ButtonRenderProps, ContextValue, OverlayTriggerStateContext, Provider, Button as RACButton} from 'react-aria-components';\nimport {centerBaseline} from './CenterBaseline';\nimport {createContext, forwardRef, ReactNode, useContext} from 'react';\nimport {FocusableRef, FocusableRefValue} from '@react-types/shared';\nimport {focusRing, getAllowedOverrides, StyleProps} from './style-utils' with { type: 'macro' };\nimport {IconContext} from './Icon';\nimport {pressScale} from './pressScale';\nimport {Text, TextContext} from './Content';\nimport {useFocusableRef} from '@react-spectrum/utils';\nimport {useSpectrumContextProps} from './useSpectrumContextProps';\n\nexport interface ActionButtonStyleProps {\n  /**\n   * The size of the ActionButton.\n   *\n   * @default 'M'\n   */\n  size?: 'XS' | 'S' | 'M' | 'L' | 'XL',\n  /** The static color style to apply. Useful when the ActionButton appears over a color background. */\n  staticColor?: 'black' | 'white',\n  /** Whether the button should be displayed with a [quiet style](https://spectrum.adobe.com/page/action-button/#Quiet). */\n  isQuiet?: boolean\n}\n\ninterface ToggleButtonStyleProps {\n  /** Whether the ActionButton should be selected (controlled). */\n  isSelected?: boolean,\n  /** Whether the button should be displayed with an [emphasized style](https://spectrum.adobe.com/page/action-button/#Emphasis). */\n  isEmphasized?: boolean\n}\n\nexport interface ActionButtonProps extends Omit<ButtonProps, 'className' | 'style' | 'children' | 'onHover' | 'onHoverStart' | 'onHoverEnd' | 'onHoverChange'>, StyleProps, ActionButtonStyleProps {\n  /** The content to display in the ActionButton. */\n  children?: ReactNode\n}\n\n// These styles handle both ActionButton and ToggleButton\nexport const btnStyles = style<ButtonRenderProps & ActionButtonStyleProps & ToggleButtonStyleProps>({\n  ...focusRing(),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  columnGap: 'text-to-visual',\n  font: 'control',\n  fontWeight: 'medium',\n  userSelect: 'none',\n  height: 'control',\n  minWidth: 'control',\n  transition: 'default',\n  forcedColorAdjust: 'none',\n  backgroundColor: {\n    default: {\n      ...baseColor('gray-100'),\n      default: {\n        default: 'gray-100',\n        isQuiet: 'transparent'\n      }\n    },\n    isSelected: {\n      default: 'neutral',\n      isEmphasized: 'accent',\n      isDisabled: {\n        default: 'gray-100',\n        isQuiet: 'transparent'\n      }\n    },\n    staticColor: {\n      white: {\n        ...baseColor('transparent-white-100'),\n        default: {\n          default: 'transparent-white-100',\n          isQuiet: 'transparent'\n        },\n        isSelected: {\n          default: baseColor('transparent-white-800'),\n          isDisabled: {\n            default: 'transparent-white-100',\n            isQuiet: 'transparent'\n          }\n        }\n      },\n      black: {\n        ...baseColor('transparent-black-100'),\n        default: {\n          default: 'transparent-black-100',\n          isQuiet: 'transparent'\n        },\n        isSelected: {\n          default: baseColor('transparent-black-800'),\n          isDisabled: {\n            default: 'transparent-black-100',\n            isQuiet: 'transparent'\n          }\n        }\n      }\n    },\n    forcedColors: {\n      default: 'ButtonFace',\n      isSelected: {\n        default: 'Highlight',\n        isDisabled: 'ButtonFace'\n      }\n    }\n  },\n  color: {\n    default: 'neutral',\n    isSelected: {\n      default: 'gray-25',\n      isEmphasized: 'white'\n    },\n    isDisabled: 'disabled',\n    staticColor: {\n      white: {\n        default: baseColor('transparent-white-800'),\n        isSelected: 'black',\n        isDisabled: 'transparent-white-400'\n      },\n      black: {\n        default: baseColor('transparent-black-800'),\n        isSelected: 'white',\n        isDisabled: 'transparent-black-400'\n      }\n    },\n    forcedColors: {\n      default: 'ButtonText',\n      isSelected: 'HighlightText',\n      isDisabled: {\n        default: 'GrayText'\n      }\n    }\n  },\n  '--iconPrimary': {\n    type: 'fill',\n    value: 'currentColor'\n  },\n  outlineColor: {\n    default: 'focus-ring',\n    staticColor: {\n      white: 'white',\n      black: 'black'\n    },\n    forcedColors: 'Highlight'\n  },\n  borderStyle: 'none',\n  paddingX: {\n    default: 'edge-to-text',\n    ':has([slot=icon]:only-child)': 0\n  },\n  paddingY: 0,\n  borderRadius: 'control',\n  '--iconMargin': {\n    type: 'marginTop',\n    value: {\n      default: fontRelative(-2),\n      ':has([slot=icon]:only-child)': 0\n    }\n  },\n  disableTapHighlight: true\n}, getAllowedOverrides());\n\nexport const ActionButtonContext = createContext<ContextValue<ActionButtonProps, FocusableRefValue<HTMLButtonElement>>>(null);\n\nfunction ActionButton(props: ActionButtonProps, ref: FocusableRef<HTMLButtonElement>) {\n  [props, ref] = useSpectrumContextProps(props, ref, ActionButtonContext);\n  let domRef = useFocusableRef(ref);\n  let overlayTriggerState = useContext(OverlayTriggerStateContext);\n\n  return (\n    <RACButton\n      {...props}\n      ref={domRef}\n      style={pressScale(domRef, props.UNSAFE_style)}\n      className={renderProps => (props.UNSAFE_className || '') + btnStyles({\n        ...renderProps,\n        // Retain hover styles when an overlay is open.\n        isHovered: renderProps.isHovered || overlayTriggerState?.isOpen || false,\n        staticColor: props.staticColor,\n        size: props.size || 'M',\n        isQuiet: props.isQuiet\n      }, props.styles)}>\n      <Provider\n        values={[\n          [TextContext, {styles: style({paddingY: '--labelPadding', order: 1, truncate: true})}],\n          [IconContext, {\n            render: centerBaseline({slot: 'icon', styles: style({order: 0})}),\n            styles: style({size: fontRelative(20), marginStart: '--iconMargin', flexShrink: 0})\n          }]\n        ]}>\n        {typeof props.children === 'string' ? <Text>{props.children}</Text> : props.children}\n      </Provider>\n    </RACButton>\n  );\n}\n\n/**\n * ActionButtons allow users to perform an action.\n * Theyâre used for similar, task-based options within a workflow, and are ideal for interfaces where buttons arenât meant to draw a lot of attention.\n */\nlet _ActionButton = forwardRef(ActionButton);\nexport {_ActionButton as ActionButton};\n","/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CSSProperties, ReactNode} from 'react';\nimport {mergeStyles} from '../style/runtime';\nimport {raw} from '../style/style-macro' with {type: 'macro'};\nimport {style} from '../style/spectrum-theme' with {type: 'macro'};\nimport {StyleString} from '../style/types';\n\ninterface CenterBaselineProps {\n  style?: CSSProperties,\n  styles?: StyleString,\n  children: ReactNode,\n  slot?: string\n}\n\nconst styles = style({\n  display: 'flex',\n  alignItems: 'center'\n});\n\nexport function CenterBaseline(props: CenterBaselineProps) {\n  return (\n    <div\n      slot={props.slot}\n      style={props.style}\n      className={mergeStyles(styles, props.styles) + ' ' + centerBaselineBefore}>\n      {props.children}\n    </div>\n  );\n}\n\nexport const centerBaselineBefore = raw('&::before { content: \"\\u00a0\"; width: 0; visibility: hidden }');\n\nexport function centerBaseline(props: Omit<CenterBaselineProps, 'children'> = {}): (icon: ReactNode) => ReactNode {\n  return (icon: ReactNode) => <CenterBaseline {...props}>{icon}</CenterBaseline>;\n}\n","/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {baseColor, fontRelative, style} from '../style/spectrum-theme' with {type: 'macro'};\nimport {ButtonRenderProps, ContextValue, Link, LinkProps, OverlayTriggerStateContext, Provider, Button as RACButton, ButtonProps as RACButtonProps} from 'react-aria-components';\nimport {centerBaseline} from './CenterBaseline';\nimport {centerPadding, focusRing, getAllowedOverrides, StyleProps} from './style-utils' with {type: 'macro'};\nimport {createContext, forwardRef, ReactNode, useContext} from 'react';\nimport {FocusableRef, FocusableRefValue} from '@react-types/shared';\nimport {IconContext} from './Icon';\nimport {pressScale} from './pressScale';\nimport {Text, TextContext} from './Content';\nimport {useFocusableRef} from '@react-spectrum/utils';\nimport {useSpectrumContextProps} from './useSpectrumContextProps';\n\ninterface ButtonStyleProps {\n  /**\n   * The [visual style](https://spectrum.adobe.com/page/button/#Options) of the button.\n   *\n   * @default 'primary'\n   */\n  variant?: 'primary' | 'secondary' | 'accent' | 'negative',\n  /**\n   * The background style of the Button.\n   *\n   * @default 'fill'\n   */\n  fillStyle?: 'fill' | 'outline',\n  /**\n   * The size of the Button.\n   *\n   * @default 'M'\n   */\n  size?: 'S' | 'M' | 'L' | 'XL',\n  /** The static color style to apply. Useful when the Button appears over a color background. */\n  staticColor?: 'white' | 'black'\n}\n\nexport interface ButtonProps extends Omit<RACButtonProps, 'className' | 'style' | 'children' | 'onHover' | 'onHoverStart' | 'onHoverEnd' | 'onHoverChange'>, StyleProps, ButtonStyleProps {\n  /** The content to display in the Button. */\n  children?: ReactNode\n}\n\nexport interface LinkButtonProps extends Omit<LinkProps, 'className' | 'style' | 'children'>, StyleProps, ButtonStyleProps {\n  /** The content to display in the Button. */\n  children?: ReactNode\n}\n\nexport const ButtonContext = createContext<ContextValue<ButtonProps, FocusableRefValue<HTMLButtonElement>>>(null);\nexport const LinkButtonContext = createContext<ContextValue<ButtonProps, FocusableRefValue<HTMLAnchorElement>>>(null);\n\nconst button = style<ButtonRenderProps & ButtonStyleProps>({\n  ...focusRing(),\n  display: 'flex',\n  alignItems: {\n    default: 'baseline',\n    ':has([slot=icon]:only-child)': 'center'\n  },\n  justifyContent: 'center',\n  textAlign: 'start',\n  columnGap: 'text-to-visual',\n  font: 'control',\n  fontWeight: 'bold',\n  userSelect: 'none',\n  minHeight: 'control',\n  minWidth: {\n    ':has([slot=icon]:only-child)': 'control'\n  },\n  borderRadius: 'pill',\n  boxSizing: 'border-box',\n  width: 'fit',\n  textDecoration: 'none', // for link buttons\n  paddingX: {\n    default: 'pill',\n    ':has([slot=icon]:only-child)': 0\n  },\n  paddingY: 0,\n  aspectRatio: {\n    ':has([slot=icon]:only-child)': 'square'\n  },\n  transition: 'default',\n  borderStyle: 'solid',\n  borderWidth: {\n    fillStyle: {\n      fill: 0,\n      outline: 2\n    }\n  },\n  '--labelPadding': {\n    type: 'paddingTop',\n    value: centerPadding()\n  },\n  '--iconMargin': {\n    type: 'marginTop',\n    value: {\n      default: fontRelative(-2),\n      ':has([slot=icon]:only-child)': 0\n    }\n  },\n  borderColor: {\n    variant: {\n      primary: baseColor('gray-800'),\n      secondary: baseColor('gray-300')\n    },\n    isDisabled: 'disabled',\n    staticColor: {\n      white: {\n        variant: {\n          primary: baseColor('transparent-white-800'),\n          secondary: baseColor('transparent-white-300')\n        },\n        isDisabled: 'transparent-white-300'\n      },\n      black: {\n        variant: {\n          primary: baseColor('transparent-black-800'),\n          secondary: baseColor('transparent-black-300')\n        },\n        isDisabled: 'transparent-black-300'\n      }\n    },\n    forcedColors: {\n      default: 'ButtonBorder',\n      isHovered: 'Highlight',\n      isDisabled: 'GrayText'\n    }\n  },\n  backgroundColor: {\n    fillStyle: {\n      fill: {\n        variant: {\n          primary: 'neutral',\n          secondary: baseColor('gray-100'),\n          accent: 'accent',\n          negative: 'negative'\n        },\n        isDisabled: 'disabled'\n      },\n      outline: {\n        default: 'transparent',\n        isHovered: 'gray-100',\n        isPressed: 'gray-100',\n        isFocusVisible: 'gray-100'\n      }\n    },\n    staticColor: {\n      white: {\n        fillStyle: {\n          fill: {\n            variant: {\n              primary: baseColor('transparent-white-800'),\n              secondary: baseColor('transparent-white-100')\n            },\n            isDisabled: 'transparent-white-100'\n          },\n          outline: {\n            default: 'transparent',\n            isHovered: 'transparent-white-100',\n            isPressed: 'transparent-white-100',\n            isFocusVisible: 'transparent-white-100'\n          }\n        }\n      },\n      black: {\n        fillStyle: {\n          fill: {\n            variant: {\n              primary: baseColor('transparent-black-800'),\n              secondary: baseColor('transparent-black-100')\n            },\n            isDisabled: 'transparent-black-100'\n          },\n          outline: {\n            default: 'transparent',\n            isHovered: 'transparent-black-100',\n            isPressed: 'transparent-black-100',\n            isFocusVisible: 'transparent-black-100'\n          }\n        }\n      }\n    },\n    forcedColors: {\n      fillStyle: {\n        fill: {\n          default: 'ButtonText',\n          isHovered: 'Highlight',\n          isDisabled: 'GrayText'\n        },\n        outline: 'ButtonFace'\n      }\n    }\n  },\n  color: {\n    fillStyle: {\n      fill: {\n        variant: {\n          primary: 'gray-25',\n          secondary: 'neutral',\n          accent: 'white',\n          negative: 'white'\n        },\n        isDisabled: 'disabled'\n      },\n      outline: {\n        default: 'neutral',\n        isDisabled: 'disabled'\n      }\n    },\n    staticColor: {\n      white: {\n        fillStyle: {\n          fill: {\n            variant: {\n              primary: 'black',\n              secondary: baseColor('transparent-white-800')\n            }\n          },\n          outline: baseColor('transparent-white-800')\n        },\n        isDisabled: 'transparent-white-400'\n      },\n      black: {\n        fillStyle: {\n          fill: {\n            variant: {\n              primary: 'white',\n              secondary: baseColor('transparent-black-800')\n            }\n          },\n          outline: baseColor('transparent-black-800')\n        },\n        isDisabled: 'transparent-black-400'\n      }\n    },\n    forcedColors: {\n      fillStyle: {\n        fill: {\n          default: 'ButtonFace',\n          isDisabled: 'HighlightText'\n        },\n        outline: {\n          default: 'ButtonText',\n          isDisabled: 'GrayText'\n        }\n      }\n    }\n  },\n  '--iconPrimary': {\n    type: 'fill',\n    value: 'currentColor'\n  },\n  outlineColor: {\n    default: 'focus-ring',\n    staticColor: {\n      white: 'white',\n      black: 'black'\n    },\n    forcedColors: 'Highlight'\n  },\n  forcedColorAdjust: 'none',\n  disableTapHighlight: true\n}, getAllowedOverrides());\n\nfunction Button(props: ButtonProps, ref: FocusableRef<HTMLButtonElement>) {\n  [props, ref] = useSpectrumContextProps(props, ref, ButtonContext);\n  let domRef = useFocusableRef(ref);\n  let overlayTriggerState = useContext(OverlayTriggerStateContext);\n\n  return (\n    <RACButton\n      {...props}\n      ref={domRef}\n      style={pressScale(domRef, props.UNSAFE_style)}\n      className={renderProps => (props.UNSAFE_className || '') + button({\n        ...renderProps,\n        // Retain hover styles when an overlay is open.\n        isHovered: renderProps.isHovered || overlayTriggerState?.isOpen || false,\n        variant: props.variant || 'primary',\n        fillStyle: props.fillStyle || 'fill',\n        size: props.size || 'M',\n        staticColor: props.staticColor\n      }, props.styles)}>\n      <Provider\n        values={[\n          [TextContext, {styles: style({paddingY: '--labelPadding', order: 1})}],\n          [IconContext, {\n            render: centerBaseline({slot: 'icon', styles: style({order: 0})}),\n            styles: style({size: fontRelative(20), marginStart: '--iconMargin', flexShrink: 0})\n          }]\n        ]}>\n        {typeof props.children === 'string' ? <Text>{props.children}</Text> : props.children}\n      </Provider>\n    </RACButton>\n  );\n}\n\n/**\n * Buttons allow users to perform an action.\n * They have multiple styles for various needs, and are ideal for calling attention to\n * where a user needs to do something in order to move forward in a flow.\n */\nlet _Button = forwardRef(Button);\nexport {_Button as Button};\n\nfunction LinkButton(props: LinkButtonProps, ref: FocusableRef<HTMLAnchorElement>) {\n  [props, ref] = useSpectrumContextProps(props, ref, LinkButtonContext);\n  let domRef = useFocusableRef(ref);\n  let overlayTriggerState = useContext(OverlayTriggerStateContext);\n\n  return (\n    <Link\n      {...props}\n      ref={domRef}\n      style={pressScale(domRef, props.UNSAFE_style)}\n      className={renderProps => (props.UNSAFE_className || '') + button({\n        ...renderProps,\n        // Retain hover styles when an overlay is open.\n        isHovered: renderProps.isHovered || overlayTriggerState?.isOpen || false,\n        variant: props.variant || 'primary',\n        fillStyle: props.fillStyle || 'fill',\n        size: props.size || 'M',\n        staticColor: props.staticColor\n      }, props.styles)}>\n      <Provider\n        values={[\n          [TextContext, {styles: style({paddingY: '--labelPadding', order: 1})}],\n          [IconContext, {\n            render: centerBaseline({slot: 'icon', styles: style({order: 0})}),\n            styles: style({size: fontRelative(20), marginStart: '--iconMargin', flexShrink: 0})\n          }]\n        ]}>\n        {typeof props.children === 'string' ? <Text>{props.children}</Text> : props.children}\n      </Provider>\n    </Link>\n  );\n}\n\n/**\n * A LinkButton combines the functionality of a link with the appearance of a button. Useful for allowing users to navigate to another page.\n */\nlet _LinkButton = forwardRef(LinkButton);\nexport {_LinkButton as LinkButton};\n","/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ButtonContext, LinkButtonContext} from './Button';\nimport {ContextValue, Provider, SlotProps} from 'react-aria-components';\nimport {createContext, forwardRef, ReactNode, useCallback, useRef} from 'react';\nimport {DOMProps, DOMRef, DOMRefValue} from '@react-types/shared';\nimport {getAllowedOverrides, StyleProps} from './style-utils' with {type: 'macro'};\nimport {style} from '../style/spectrum-theme' with {type: 'macro'};\nimport {\n  useDOMRef,\n  useResizeObserver\n} from '@react-spectrum/utils';\nimport {useLayoutEffect, useValueEffect} from '@react-aria/utils';\nimport {useSpectrumContextProps} from './useSpectrumContextProps';\n\ninterface ButtonGroupStyleProps {\n  /**\n   * The axis the ButtonGroup should align with. Setting this to 'vertical' will prevent\n   * any switching behaviors between 'vertical' and 'horizontal'.\n   *\n   * @default 'horizontal'\n   */\n  orientation?: 'horizontal' | 'vertical',\n  /**\n   * The alignment of the Buttons within the ButtonGroup.\n   *\n   * @default 'start'\n   */\n  align?: 'start' | 'end' | 'center',\n  /**\n   * The size of the Buttons within the ButtonGroup.\n   *\n   * @default 'M'\n   */\n  size?: 'S' | 'M' | 'L' | 'XL'\n}\n\nexport interface ButtonGroupProps extends ButtonGroupStyleProps, SlotProps, StyleProps, DOMProps {\n  /** The Buttons contained within the ButtonGroup. */\n  children: ReactNode,\n  /** Whether the Buttons in the ButtonGroup are all disabled. */\n  isDisabled?: boolean\n}\n\ninterface ButtonGroupContextValue extends Partial<ButtonGroupProps> {\n  /** Whether the ButtonGroup shouldn't be rendered. */\n  isHidden?: boolean\n}\n\nexport const ButtonGroupContext = createContext<ContextValue<ButtonGroupContextValue, DOMRefValue<HTMLDivElement>>>({});\n\nconst buttongroup = style<ButtonGroupStyleProps>({\n  display: 'inline-flex',\n  position: 'relative',\n  gap: {\n    size: {\n      S: 8,\n      M: 12,\n      L: 12,\n      XL: 12\n    }\n  },\n  flexDirection: {\n    default: 'row',\n    orientation: {\n      vertical: 'column'\n    }\n  },\n  alignItems: {\n    default: 'center',\n    orientation: {\n      vertical: {\n        default: 'start',\n        align: {\n          end: 'end',\n          center: 'center'\n        }\n      }\n    }\n  },\n  justifyContent: {\n    orientation: {\n      vertical: {\n        default: 'start',\n        align: {\n          end: 'end',\n          center: 'center'\n        }\n      }\n    }\n  }\n}, getAllowedOverrides());\n\nfunction ButtonGroup(props: ButtonGroupProps, ref: DOMRef<HTMLDivElement>) {\n  [props, ref] = useSpectrumContextProps(props, ref, ButtonGroupContext);\n  let domRef = useDOMRef(ref);\n  let {\n    size = 'M',\n    orientation = 'horizontal',\n    align = 'start',\n    children,\n    isDisabled\n  } = props;\n\n  let [hasOverflow, setHasOverflow] = useValueEffect(false);\n\n  let checkForOverflow = useCallback(() => {\n    let computeHasOverflow = () => {\n      if (domRef.current && orientation === 'horizontal') {\n        let buttonGroupChildren = Array.from(domRef.current.children) as HTMLElement[];\n        let maxX = domRef.current.offsetWidth + 1; // + 1 to account for rounding errors\n        // If any buttons have negative X positions (align=\"end\") or extend beyond\n        // the width of the button group (align=\"start\"), then switch to vertical.\n        if (buttonGroupChildren.some(child => child.offsetLeft < 0 || child.offsetLeft + child.offsetWidth > maxX)) {\n          return true;\n        }\n        return false;\n      }\n    };\n    if (orientation === 'horizontal') {\n      setHasOverflow(function* () {\n        // Force to horizontal for measurement.\n        yield false;\n\n        // Measure, and update if there is overflow.\n        yield computeHasOverflow();\n      });\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [domRef, orientation, setHasOverflow, children]);\n\n  // There are two main reasons we need to remeasure:\n  // 1. Internal changes: Check for initial overflow or when orientation/scale/children change (from checkForOverflow dep array)\n  useLayoutEffect(() => {\n    checkForOverflow();\n  }, [checkForOverflow]);\n\n  // 2. External changes: buttongroup won't change size due to any parents changing size, so listen to its container for size changes to figure out if we should remeasure\n  let parent = useRef<HTMLElement | null>(null);\n  useLayoutEffect(() => {\n    if (domRef.current) {\n      parent.current = domRef.current.parentElement as HTMLElement;\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [domRef.current]);\n  useResizeObserver({ref: parent, onResize: checkForOverflow});\n\n  if ((props as ButtonGroupContextValue).isHidden) {\n    return null;\n  }\n\n  let context = {styles: style({flexShrink: 0}), size, isDisabled};\n  return (\n    <div\n      ref={domRef}\n      style={props.UNSAFE_style}\n      className={(props.UNSAFE_className || '') + buttongroup({\n        align,\n        orientation: orientation === 'vertical' || hasOverflow ? 'vertical' : 'horizontal',\n        size\n      }, props.styles)}>\n      <Provider\n        values={[\n          [ButtonContext, context],\n          [LinkButtonContext, context]\n        ]}>\n        {children}\n      </Provider>\n    </div>\n  );\n}\n\n/**\n * ButtonGroup handles overflow for a grouping of buttons whose actions are related to each other.\n */\nconst _ButtonGroup = forwardRef(ButtonGroup);\nexport {_ButtonGroup as ButtonGroup};\n","html {\n  --lightningcss-light: initial;\n  --lightningcss-dark: ;\n  color-scheme: light dark;\n  --s2-container-bg: var(--lightningcss-light, #fff) var(--lightningcss-dark, #111);\n  background: var(--s2-container-bg);\n}\n\n@media (prefers-color-scheme: dark) {\n  html {\n    --lightningcss-light: ;\n    --lightningcss-dark: initial;\n  }\n}\n\nhtml[data-color-scheme=\"light\"] {\n  --lightningcss-light: initial;\n  --lightningcss-dark: ;\n  color-scheme: light;\n}\n\nhtml[data-color-scheme=\"dark\"] {\n  --lightningcss-light: ;\n  --lightningcss-dark: initial;\n  color-scheme: dark;\n}\n\nhtml[data-background=\"layer-1\"] {\n  --s2-container-bg: var(--lightningcss-light, #f8f8f8) var(--lightningcss-dark, #1b1b1b);\n}\n\nhtml[data-background=\"layer-2\"] {\n  --s2-container-bg: var(--lightningcss-light, #fff) var(--lightningcss-dark, #222);\n}\n/*# sourceMappingURL=page.css.map */\n"],"names":[],"version":3,"file":"index.85e1491a.css.map"}